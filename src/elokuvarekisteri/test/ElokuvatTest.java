package elokuvarekisteri.test;
// Generated by ComTest BEGIN
import java.io.File;
import elokuvarekisteri.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.05.22 10:27:36 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class ElokuvatTest {



  // Generated by ComTest BEGIN
  /** testLisaa61 */
  @Test
  public void testLisaa61() {    // Elokuvat: 61
    Elokuvat elokuvat = new Elokuvat(); 
    Elokuva elokuva1 = new Elokuva("Captain Marvel", 2019, "07.03.2019", 7.1, 8.5, 1, 1); 
    Elokuva elokuva2 = new Elokuva("Deadpool", 2016, "21.05.2016", 8.0, 9.0, 2, 2); 
    assertEquals("From: Elokuvat line: 65", 0, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva1); assertEquals("From: Elokuvat line: 66", 1, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva2); assertEquals("From: Elokuvat line: 67", 2, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva1); assertEquals("From: Elokuvat line: 68", 3, elokuvat.getLkm()); 
    assertEquals("From: Elokuvat line: 69", elokuva1, elokuvat.anna(0)); 
    assertEquals("From: Elokuvat line: 70", elokuva2, elokuvat.anna(1)); 
    assertEquals("From: Elokuvat line: 71", elokuva1, elokuvat.anna(2)); 
    assertEquals("From: Elokuvat line: 72", false, elokuvat.anna(1) == elokuva1); 
    assertEquals("From: Elokuvat line: 73", true, elokuvat.anna(1) == elokuva2); 
    try {
    assertEquals("From: Elokuvat line: 74", elokuva1, elokuvat.anna(3)); 
    fail("Elokuvat: 74 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    Elokuva elokuva3 = new Elokuva("Avengers: Endgame", 2019, "25.04.2019", 9.6, 9.4, 1, 1); 
    elokuvat.lisaa(elokuva3); assertEquals("From: Elokuvat line: 76", 4, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva2); assertEquals("From: Elokuvat line: 77", 5, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva3); assertEquals("From: Elokuvat line: 78", 6, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva2); assertEquals("From: Elokuvat line: 79", 7, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva2); assertEquals("From: Elokuvat line: 80", 8, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva1); assertEquals("From: Elokuvat line: 81", 9, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva3); assertEquals("From: Elokuvat line: 82", 10, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva3); assertEquals("From: Elokuvat line: 83", 11, elokuvat.getLkm()); 
    elokuvat.lisaa(elokuva1); assertEquals("From: Elokuvat line: 84", 12, elokuvat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta186 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta186() throws SailoException {    // Elokuvat: 186
    Elokuvat elokuvat = new Elokuvat(); 
    Elokuva elo1 = new Elokuva("Captain Marvel", 2019, "07.03.2019", 7.1, 8.5, 1, 1), elo2 = new Elokuva("Deadpool", 2016, "21.05.2019", 8.0, 9.0, 1, 1); 
    String hakemisto = "testi"; 
    String tiedNimi = hakemisto+"/elokuvat"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    elokuvat.lueTiedostosta(tiedNimi); 
    fail("Elokuvat: 198 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    elokuvat.lisaa(elo1); 
    elokuvat.lisaa(elo2); 
    elokuvat.tallenna(); 
    elokuvat = new Elokuvat(); 
    elokuvat.lueTiedostosta(tiedNimi); 
    Iterator<Elokuva> i = elokuvat.iterator(); 
    assertEquals("From: Elokuvat line: 205", elo1, i.next()); 
    assertEquals("From: Elokuvat line: 206", elo2, i.next()); 
    assertEquals("From: Elokuvat line: 207", false, i.hasNext()); 
    elokuvat.lisaa(elo2); 
    elokuvat.tallenna(); 
    assertEquals("From: Elokuvat line: 210", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Elokuvat line: 212", true, fbak.delete()); 
    assertEquals("From: Elokuvat line: 213", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testElokuvatIterator263 
   * @throws SailoException when error
   */
  @Test
  public void testElokuvatIterator263() throws SailoException {    // Elokuvat: 263
    Elokuvat elokuvat = new Elokuvat(); 
    Elokuva elo1 = new Elokuva(), elo2 = new Elokuva(); 
    elo1.rekisteroi(); elo2.rekisteroi(); 
    elokuvat.lisaa(elo1); 
    elokuvat.lisaa(elo2); 
    elokuvat.lisaa(elo1); 
    StringBuilder ids = new StringBuilder(30); 
    for ( Elokuva elokuva: elokuvat)
    ids.append(" "+elokuva.getTunnusNro()); 
    String tulos = " " + elo1.getTunnusNro() + " " + elo2.getTunnusNro() + " " + elo1.getTunnusNro(); 
    assertEquals("From: Elokuvat line: 282", tulos, ids.toString()); 
    ids = new StringBuilder(30); 
    for (Iterator<Elokuva> i=elokuvat.iterator(); i.hasNext(); ) {
    Elokuva elokuva = i.next(); 
    ids.append(" "+elokuva.getTunnusNro()); 
    }
    assertEquals("From: Elokuvat line: 290", tulos, ids.toString()); 
    Iterator<Elokuva> i=elokuvat.iterator(); 
    assertEquals("From: Elokuvat line: 293", true, i.next() == elo1); 
    assertEquals("From: Elokuvat line: 294", true, i.next() == elo2); 
    assertEquals("From: Elokuvat line: 295", true, i.next() == elo1); 
    try {
    i.next(); 
    fail("Elokuvat: 297 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END
}